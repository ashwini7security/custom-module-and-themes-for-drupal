<?php

/**
 * Implements hook_menu().
 */
function block_example_menu() {
  $items['block_example/block_example'] = array(
    'page callback' => 'block_example_page',
    'access callback' => TRUE,
    'title' => 'Block Drive',
  );
  return $items;
}

/**
 * page function to explain what the block example is about.
 */
function block_example_page() {
  $page = array(
    '#type' => 'markup',
    '#markup' => t('The Block Example provides two sample blocks which demonstrate the various block APIs. To experiment with the blocks, enable and configure them on the block admin page.', array('@url' => url('admin/structure/block'))),
  );
  return $page;
}
/**
 * Implements hook_block_info().
 */
function block_example_block_info() {
 
  $blocks['example_configurable_text'] = array(
    // info: The name of the block.
    'info' => t('Example: configurable text string'),
	    // Block caching options 
    #   'cache' => DRUPAL_CACHE_PER_ROLE, // default
    'status' => TRUE,
    'region' => 'sidebar_first',
  );

  
  // enable the block in the first sidebar and make it visible only on
  // 'node/*' pages. See the hook_block_info() documentation for these.
  $blocks['example_empty'] = array(
    'info' => t('Example: empty block'),
    'status' => TRUE,
    'region' => 'sidebar_first',  
    'visibility' => BLOCK_VISIBILITY_LISTED,  
    'pages' => 'node/*', 
  );

  $blocks['example_uppercase'] = array(
    // info: The name of the block.
    'info' => t('Example: uppercase this please'),
    'status' => TRUE,
    'region' => 'sidebar_first',  
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function block_example_block_configure($delta = '') {

  $form = array();
  if ($delta == 'example_configurable_text') {
    // All we need to provide is the specific configuration options for our
    // block. Drupal will take care of the standard block configuration options and the save button.
    $form['block_example_string'] = array(
      '#type' => 'textfield',
      '#title' => t('Block contents'),
      '#size' => 60,
      '#description' => t('This text will appear in the example block.'),
      '#default_value' => variable_get('block_example_string',  t('Some example content.')),
    );

    $form['block_example_content'] = array(
	    '#type' => 'textfield' ,
	    '#title' => t('Block body'),
	    '#size' => 60,
	    '#description' => t('This text will appear in the example block'),
	    '#default_value' => variable_get('block_example_content', t('Some example content')),
    );

  }
  return $form;
}

// Implements hook_block_save().

function block_example_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'example_configurable_text') {
    // Have Drupal save the string to the database.
	  variable_set('block_example_string', $edit['block_example_string']);
	  variable_set('block_example_content', $edit['block_example_content']);
  }
  return;
}

/**
 * Implements hook_block_view().
 */
function block_example_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'example_configurable_text':
     
      $block['subject'] = t('Title of first block (example_configurable_text)');
      $block['content'] = block_example_contents($delta);
      #$block['content'] = t('Block number2');
      break;
    case 'example_empty':
      $block['subject'] = t('Title of second block (example_empty)');
#      $block['content'] = block_example_contents($delta);
      $block['content'] = t('Block number 3');
      break;
    case 'example_uppercase':
      $block['subject'] = t("uppercase this please");
      $block['content'] = t("This block's title will be changed to uppercase..");
      break;
  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function block_example_contents($which_block) {
  switch ($which_block) {
    case 'example_configurable_text':
      return array('#markup' => variable_get('block_example_string',  t('A default value. This block was created at %time', array('%time' => date('c')))));
    case 'example_empty':
     
      return;
  }
}

// Implements hook_block_list()
function block_example_block_list_alter(&$blocks) {
 
  foreach ($blocks as $bid => $block) {
    if (($block->module == 'search') && ($block->delta == 'form')) {
      // Remove the block from the list and append to the end.
      unset($blocks[$bid]);
      $blocks[$bid] = $block;
      break;
    }
  }
}

// Implements hook_block_view_alter()
//
function block_example_block_view_alter(&$data, $block) {
  // We'll search for the string 'uppercase'.
  if ((!empty($block->title) && stristr($block->title, 'uppercase')) || (!empty($data['subject']) && stristr($data['subject'], 'uppercase'))) {
    // This will uppercase the default title.
    $data['subject'] = isset($data['subject']) ? drupal_strtoupper($data['subject']) : '';
    // This will uppercase a title set in the UI.
    $block->title = isset($block->title) ? drupal_strtoupper($block->title) : '';
  }
}
/**
 *  End of  block sample".
 */
